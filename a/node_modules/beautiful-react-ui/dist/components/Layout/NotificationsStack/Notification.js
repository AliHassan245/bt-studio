"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _beautifulReactHooks = require("beautiful-react-hooks");

var _NotificationLeftRender = _interopRequireDefault(require("./NotificationLeftRender"));

var _NotificationContent = _interopRequireDefault(require("./NotificationContent"));

var _NotificationRightRender = _interopRequireDefault(require("./NotificationRightRender"));

var _shared = require("../../../shared");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Notification = function Notification(props) {
  var onClose = props.onClose,
      closable = props.closable,
      icon = props.icon,
      avatar = props.avatar,
      title = props.title,
      content = props.content,
      timeout = props.timeout;
  (0, _beautifulReactHooks.useConditionalTimeout)(onClose, timeout, timeout !== false);
  return _react.default.createElement("div", {
    className: "bi bi-notification"
  }, (icon || avatar) && _react.default.createElement(_NotificationLeftRender.default, {
    icon: icon,
    avatar: avatar
  }), _react.default.createElement(_NotificationContent.default, {
    title: title,
    content: content
  }), closable && _react.default.createElement(_NotificationRightRender.default, {
    onToggle: onClose
  }));
};

Notification.propTypes = {
  onClose: _propTypes.default.func.isRequired,
  icon: _shared.IconProp,
  avatar: _propTypes.default.string,
  title: _propTypes.default.string,
  content: _propTypes.default.string.isRequired,
  closable: _propTypes.default.bool,
  timeout: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.number])
};
Notification.defaultProps = {
  icon: undefined,
  avatar: null,
  title: undefined,
  closable: true,
  timeout: 2000
};
var _default = Notification;
exports.default = _default;
//# sourceMappingURL=Notification.js.map
