{"version":3,"sources":["components/Layout/NotificationsStack/Notification.js"],"names":["Notification","props","onClose","closable","icon","avatar","title","content","timeout","propTypes","PropTypes","func","isRequired","IconProp","string","bool","oneOfType","number","defaultProps","undefined"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AASA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA,MACtBC,OADsB,GACuCD,KADvC,CACtBC,OADsB;AAAA,MACbC,QADa,GACuCF,KADvC,CACbE,QADa;AAAA,MACHC,IADG,GACuCH,KADvC,CACHG,IADG;AAAA,MACGC,MADH,GACuCJ,KADvC,CACGI,MADH;AAAA,MACWC,KADX,GACuCL,KADvC,CACWK,KADX;AAAA,MACkBC,OADlB,GACuCN,KADvC,CACkBM,OADlB;AAAA,MAC2BC,OAD3B,GACuCP,KADvC,CAC2BO,OAD3B;AAI9B,kDAAsBN,OAAtB,EAA+BM,OAA/B,EAAwCA,OAAO,KAAK,KAApD;AAEA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACG,CAACJ,IAAI,IAAIC,MAAT,KACC,6BAAC,+BAAD;AAAwB,IAAA,IAAI,EAAED,IAA9B;AAAoC,IAAA,MAAM,EAAEC;AAA5C,IAFJ,EAIE,6BAAC,4BAAD;AAAqB,IAAA,KAAK,EAAEC,KAA5B;AAAmC,IAAA,OAAO,EAAEC;AAA5C,IAJF,EAKIJ,QAAD,IACC,6BAAC,gCAAD;AAAyB,IAAA,QAAQ,EAAED;AAAnC,IANJ,CADF;AAWD,CAjBD;;AAmBAF,YAAY,CAACS,SAAb,GAAyB;AAIvBP,EAAAA,OAAO,EAAEQ,mBAAUC,IAAV,CAAeC,UAJD;AAQvBR,EAAAA,IAAI,EAAES,gBARiB;AAavBR,EAAAA,MAAM,EAAEK,mBAAUI,MAbK;AAiBvBR,EAAAA,KAAK,EAAEI,mBAAUI,MAjBM;AAqBvBP,EAAAA,OAAO,EAAEG,mBAAUI,MAAV,CAAiBF,UArBH;AAyBvBT,EAAAA,QAAQ,EAAEO,mBAAUK,IAzBG;AA6BvBP,EAAAA,OAAO,EAAEE,mBAAUM,SAAV,CAAoB,CAACN,mBAAUK,IAAX,EAAiBL,mBAAUO,MAA3B,CAApB;AA7Bc,CAAzB;AAgCAjB,YAAY,CAACkB,YAAb,GAA4B;AAC1Bd,EAAAA,IAAI,EAAEe,SADoB;AAE1Bd,EAAAA,MAAM,EAAE,IAFkB;AAG1BC,EAAAA,KAAK,EAAEa,SAHmB;AAI1BhB,EAAAA,QAAQ,EAAE,IAJgB;AAK1BK,EAAAA,OAAO,EAAE;AALiB,CAA5B;eAQeR,Y","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useConditionalTimeout } from 'beautiful-react-hooks';\nimport NotificationLeftRender from './NotificationLeftRender';\nimport NotificationContent from './NotificationContent';\nimport NotificationRightRender from './NotificationRightRender';\nimport { IconProp } from '../../../shared';\n\n\nimport './notification.scss';\n\n/**\n * The Notification component is an alert positioned over the document to inform the user about something happening.\n * Usually is a temporary alert\n */\nconst Notification = (props) => {\n  const { onClose, closable, icon, avatar, title, content, timeout } = props;\n\n  // add a timeout to the notification if timeout is define of different from false\n  useConditionalTimeout(onClose, timeout, timeout !== false);\n\n  return (\n    <div className=\"bi bi-notification\">\n      {(icon || avatar) && (\n        <NotificationLeftRender icon={icon} avatar={avatar} />\n      )}\n      <NotificationContent title={title} content={content} />\n      {(closable) && (\n        <NotificationRightRender onToggle={onClose} />\n      )}\n    </div>\n  );\n};\n\nNotification.propTypes = {\n  /**\n   * This prop will close the notification after certain time, if timeout is defined, or on button click.\n   */\n  onClose: PropTypes.func.isRequired,\n  /**\n   * The notification icon: you can pass both a valid Icon component name prop or the instance of an Icon component\n   */\n  icon: IconProp,\n  /**\n   * This prop define the avatar that will be shown into notification\n   * It should be a string that will be pass to the Avatar component\n   */\n  avatar: PropTypes.string,\n  /**\n   * The notification title\n   */\n  title: PropTypes.string,\n  /**\n   * The notification content\n   */\n  content: PropTypes.string.isRequired,\n  /**\n   * This prop will show a closable button to close the notification.\n   */\n  closable: PropTypes.bool,\n  /**\n   * This prop defines after how many second the notification will disappear.\n   */\n  timeout: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n};\n\nNotification.defaultProps = {\n  icon: undefined,\n  avatar: null,\n  title: undefined,\n  closable: true,\n  timeout: 2000,\n};\n\nexport default Notification;\n"],"file":"Notification.js"}