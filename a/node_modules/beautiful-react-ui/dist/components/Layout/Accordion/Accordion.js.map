{"version":3,"sources":["components/Layout/Accordion/Accordion.js"],"names":["enrichChild","props","child","index","AccordionContent","React","cloneElement","internalId","active","Array","isArray","includes","onChange","Accordion","memo","children","color","className","ElementRender","rest","classList","Children","map","propTypes","PropTypes","oneOfType","arrayOf","number","func","Color","elementType","defaultProps","undefined","Content"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;AAOA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD;AAAA,SAAW,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAC/C,wCAAuBD,KAAvB,EAA8B,CAACE,yBAAD,CAA9B,EAAkD,WAAlD;AAEA,WAAOC,eAAMC,YAAN,CAAmBJ,KAAnB,EAA0B;AAC/BK,MAAAA,UAAU,EAAEJ,KADmB;AAE/BK,MAAAA,MAAM,EAAEC,KAAK,CAACC,OAAN,CAAcT,KAAK,CAACO,MAApB,IAA8BP,KAAK,CAACO,MAAN,CAAaG,QAAb,CAAsBR,KAAtB,CAA9B,GAA6DF,KAAK,CAACO,MAAN,KAAiBL,KAFvD;AAG/BS,MAAAA,QAAQ,EAAEX,KAAK,CAACW;AAHe,KAA1B,CAAP;AAKD,GARmB;AAAA,CAApB;;AAcA,IAAMC,SAAS,GAAGR,eAAMS,IAAN,CAAW,UAACb,KAAD,EAAW;AAAA,MAC9Bc,QAD8B,GACyBd,KADzB,CAC9Bc,QAD8B;AAAA,MACpBC,KADoB,GACyBf,KADzB,CACpBe,KADoB;AAAA,MACbC,SADa,GACyBhB,KADzB,CACbgB,SADa;AAAA,MACFC,aADE,GACyBjB,KADzB,CACFiB,aADE;AAAA,MACgBC,IADhB,4BACyBlB,KADzB;;AAEtC,MAAMmB,SAAS,GAAG,oBAAQ;AAAA,WACxB,yBAAW,iBAAX,yBAA8CJ,KAA9C,GAAuDC,SAAvD,CADwB;AAAA,GAAR,EAEf,CAACD,KAAD,EAAQC,SAAR,CAFe,CAAlB;AAIA,SACE,6BAAC,aAAD;AAAe,IAAA,SAAS,EAAEG;AAA1B,KAAyCD,IAAzC,GACGE,gBAASC,GAAT,CAAaP,QAAb,EAAuBf,WAAW,CAACC,KAAD,CAAlC,CADH,CADF;AAKD,CAXiB,CAAlB;;AAaAY,SAAS,CAACU,SAAV,GAAsB;AAIpBf,EAAAA,MAAM,EAAEgB,mBAAUC,SAAV,CAAoB,CAACD,mBAAUE,OAAV,CAAkBF,mBAAUG,MAA5B,CAAD,EAAsCH,mBAAUG,MAAhD,CAApB,CAJY;AAQpBf,EAAAA,QAAQ,EAAEY,mBAAUI,IARA;AAapBZ,EAAAA,KAAK,EAAEa,aAba;AAiBpBX,EAAAA,aAAa,EAAEM,mBAAUM;AAjBL,CAAtB;AAoBAjB,SAAS,CAACkB,YAAV,GAAyB;AACvBvB,EAAAA,MAAM,EAAEwB,SADe;AAEvBpB,EAAAA,QAAQ,EAAEoB,SAFa;AAGvBhB,EAAAA,KAAK,EAAE,SAHgB;AAIvBE,EAAAA,aAAa,EAAE;AAJQ,CAAzB;AAQAL,SAAS,CAACoB,OAAV,GAAoB7B,yBAApB;eAEeS,S","sourcesContent":["import React, { Children, useMemo } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { Color, checkOnAllowedChildren } from '../../../shared';\nimport AccordionContent from './AccordionContent';\n\nimport './accordion.scss';\n\n/**\n * Enrich Accordion child\n */\nconst enrichChild = (props) => (child, index) => {\n  checkOnAllowedChildren(child, [AccordionContent], 'Accordion');\n\n  return React.cloneElement(child, {\n    internalId: index,\n    active: Array.isArray(props.active) ? props.active.includes(index) : props.active === index,\n    onChange: props.onChange,\n  });\n};\n\n/**\n * An Accordion component allows the user to toggle between the contents by showing once per time.\n */\n// the React.memo has been used here rather than on the export line like other cases, to avoid wrapping the shortcut.\nconst Accordion = React.memo((props) => {\n  const { children, color, className, ElementRender, ...rest } = props;\n  const classList = useMemo(() => (\n    classNames('bi bi-accordion', `bi-accordion-${color}`, className)\n  ), [color, className]);\n\n  return (\n    <ElementRender className={classList} {...rest}>\n      {Children.map(children, enrichChild(props))}\n    </ElementRender>\n  );\n});\n\nAccordion.propTypes = {\n  /**\n   * Defines the current active tab index\n   */\n  active: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number]),\n  /**\n   * The callback to be performed on content change\n   */\n  onChange: PropTypes.func,\n  /**\n   * Defines the color of the accordion, can be one of the following:\n   * `default`, `primary`, `secondary`, `info`, `warning`, `success`, `danger`.\n   */\n  color: Color,\n  /**\n   * A render function to be used as the accordion element instead of the default one\n   */\n  ElementRender: PropTypes.elementType,\n};\n\nAccordion.defaultProps = {\n  active: undefined,\n  onChange: undefined,\n  color: 'default',\n  ElementRender: 'div',\n};\n\n// shortcut to AccordionContent so that we can use it as the following: `Accordion.Content`\nAccordion.Content = AccordionContent;\n\nexport default Accordion;\n"],"file":"Accordion.js"}