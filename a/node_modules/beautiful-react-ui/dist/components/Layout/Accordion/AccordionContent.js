"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

require("core-js/modules/es7.symbol.async-iterator");

require("core-js/modules/es6.string.iterator");

require("core-js/modules/es6.weak-map");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("core-js/modules/es6.object.assign");

require("core-js/modules/es6.symbol");

require("core-js/modules/web.dom.iterable");

require("core-js/modules/es6.array.iterator");

require("core-js/modules/es6.object.to-string");

require("core-js/modules/es6.object.keys");

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Caret = _interopRequireDefault(require("../../Elements/_Caret"));

var _Button = _interopRequireDefault(require("../../Elements/Button"));

var _shared = require("../../../shared");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var AccordionContent = function AccordionContent(props) {
  var internalId = props.internalId,
      children = props.children,
      active = props.active,
      title = props.title,
      onChange = props.onChange,
      ButtonRender = props.ButtonRender,
      ContentRender = props.ContentRender,
      ElementRender = props.ElementRender,
      CaretRender = props.CaretRender,
      rest = _objectWithoutProperties(props, ["internalId", "children", "active", "title", "onChange", "ButtonRender", "ContentRender", "ElementRender", "CaretRender"]);

  var classList = (0, _react.useMemo)(function () {
    return (0, _classnames.default)('bi', 'bi-accordion-item', {
      'bi-item-open': active
    });
  }, [active]);
  var onClickHandler = (0, _react.useCallback)((0, _shared.makeCallback)(onChange, internalId), [onChange, internalId]);
  return _react.default.createElement(ElementRender, _extends({
    className: classList
  }, rest), _react.default.createElement(ButtonRender, {
    fluid: true,
    color: "transparent",
    onClick: onClickHandler,
    className: "bi-accordion-toggle"
  }, _react.default.createElement(CaretRender, null), title), _react.default.createElement(ContentRender, {
    className: "bi-accordion-content"
  }, children));
};

AccordionContent.propTypes = {
  internalId: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]).isRequired,
  active: _propTypes.default.bool,
  onChange: _propTypes.default.func,
  title: _propTypes.default.elementType,
  ButtonRender: _propTypes.default.elementType,
  ContentRender: _propTypes.default.elementType,
  ElementRender: _propTypes.default.elementType,
  CaretRender: _propTypes.default.elementType
};
AccordionContent.defaultProps = {
  active: false,
  title: undefined,
  onChange: undefined,
  ButtonRender: _Button.default,
  ContentRender: 'div',
  ElementRender: 'div',
  CaretRender: _Caret.default
};

var _default = _react.default.memo(AccordionContent);

exports.default = _default;
//# sourceMappingURL=AccordionContent.js.map
