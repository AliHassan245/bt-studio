{"version":3,"sources":["components/Layout/Accordion/AccordionContent.js"],"names":["AccordionContent","props","internalId","children","active","title","onChange","ButtonRender","ContentRender","ElementRender","CaretRender","rest","classList","onClickHandler","propTypes","PropTypes","oneOfType","string","number","isRequired","bool","func","elementType","defaultProps","undefined","Button","Caret","React","memo"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;AAKA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAAA,MAEhCC,UAFgC,GAG9BD,KAH8B,CAEhCC,UAFgC;AAAA,MAEpBC,QAFoB,GAG9BF,KAH8B,CAEpBE,QAFoB;AAAA,MAEVC,MAFU,GAG9BH,KAH8B,CAEVG,MAFU;AAAA,MAEFC,KAFE,GAG9BJ,KAH8B,CAEFI,KAFE;AAAA,MAEKC,QAFL,GAG9BL,KAH8B,CAEKK,QAFL;AAAA,MAEeC,YAFf,GAG9BN,KAH8B,CAEeM,YAFf;AAAA,MAE6BC,aAF7B,GAG9BP,KAH8B,CAE6BO,aAF7B;AAAA,MAE4CC,aAF5C,GAG9BR,KAH8B,CAE4CQ,aAF5C;AAAA,MAE2DC,WAF3D,GAG9BT,KAH8B,CAE2DS,WAF3D;AAAA,MAE2EC,IAF3E,4BAG9BV,KAH8B;;AAIlC,MAAMW,SAAS,GAAG,oBAAQ;AAAA,WAAM,yBAAW,IAAX,EAAiB,mBAAjB,EAAsC;AACpE,sBAAgBR;AADoD,KAAtC,CAAN;AAAA,GAAR,EAEd,CAACA,MAAD,CAFc,CAAlB;AAIA,MAAMS,cAAc,GAAG,wBAAY,0BAAaP,QAAb,EAAuBJ,UAAvB,CAAZ,EAAgD,CAACI,QAAD,EAAWJ,UAAX,CAAhD,CAAvB;AAEA,SACE,6BAAC,aAAD;AAAe,IAAA,SAAS,EAAEU;AAA1B,KAAyCD,IAAzC,GACE,6BAAC,YAAD;AAAc,IAAA,KAAK,MAAnB;AAAoB,IAAA,KAAK,EAAC,aAA1B;AAAwC,IAAA,OAAO,EAAEE,cAAjD;AAAiE,IAAA,SAAS,EAAC;AAA3E,KACE,6BAAC,WAAD,OADF,EAEGR,KAFH,CADF,EAKE,6BAAC,aAAD;AAAe,IAAA,SAAS,EAAC;AAAzB,KACGF,QADH,CALF,CADF;AAWD,CArBD;;AAuBAH,gBAAgB,CAACc,SAAjB,GAA6B;AAC3BZ,EAAAA,UAAU,EAAEa,mBAAUC,SAAV,CAAoB,CAACD,mBAAUE,MAAX,EAAmBF,mBAAUG,MAA7B,CAApB,EAA0DC,UAD3C;AAE3Bf,EAAAA,MAAM,EAAEW,mBAAUK,IAFS;AAG3Bd,EAAAA,QAAQ,EAAES,mBAAUM,IAHO;AAI3BhB,EAAAA,KAAK,EAAEU,mBAAUO,WAJU;AAK3Bf,EAAAA,YAAY,EAAEQ,mBAAUO,WALG;AAM3Bd,EAAAA,aAAa,EAAEO,mBAAUO,WANE;AAO3Bb,EAAAA,aAAa,EAAEM,mBAAUO,WAPE;AAQ3BZ,EAAAA,WAAW,EAAEK,mBAAUO;AARI,CAA7B;AAWAtB,gBAAgB,CAACuB,YAAjB,GAAgC;AAC9BnB,EAAAA,MAAM,EAAE,KADsB;AAE9BC,EAAAA,KAAK,EAAEmB,SAFuB;AAG9BlB,EAAAA,QAAQ,EAAEkB,SAHoB;AAI9BjB,EAAAA,YAAY,EAAEkB,eAJgB;AAK9BjB,EAAAA,aAAa,EAAE,KALe;AAM9BC,EAAAA,aAAa,EAAE,KANe;AAO9BC,EAAAA,WAAW,EAAEgB;AAPiB,CAAhC;;eAUeC,eAAMC,IAAN,CAAW5B,gBAAX,C","sourcesContent":["import React, { useMemo, useCallback } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Caret from '../../Elements/_Caret';\nimport Button from '../../Elements/Button';\nimport { makeCallback } from '../../../shared';\n\n/**\n * AccordionContent wraps a given content\n */\nconst AccordionContent = (props) => {\n  const {\n    internalId, children, active, title, onChange, ButtonRender, ContentRender, ElementRender, CaretRender, ...rest\n  } = props;\n  const classList = useMemo(() => classNames('bi', 'bi-accordion-item', {\n    'bi-item-open': active,\n  }), [active]);\n\n  const onClickHandler = useCallback(makeCallback(onChange, internalId), [onChange, internalId]);\n\n  return (\n    <ElementRender className={classList} {...rest}>\n      <ButtonRender fluid color=\"transparent\" onClick={onClickHandler} className=\"bi-accordion-toggle\">\n        <CaretRender />\n        {title}\n      </ButtonRender>\n      <ContentRender className=\"bi-accordion-content\">\n        {children}\n      </ContentRender>\n    </ElementRender>\n  );\n};\n\nAccordionContent.propTypes = {\n  internalId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  active: PropTypes.bool,\n  onChange: PropTypes.func,\n  title: PropTypes.elementType,\n  ButtonRender: PropTypes.elementType,\n  ContentRender: PropTypes.elementType,\n  ElementRender: PropTypes.elementType,\n  CaretRender: PropTypes.elementType,\n};\n\nAccordionContent.defaultProps = {\n  active: false,\n  title: undefined,\n  onChange: undefined,\n  ButtonRender: Button,\n  ContentRender: 'div',\n  ElementRender: 'div',\n  CaretRender: Caret,\n};\n\nexport default React.memo(AccordionContent);\n"],"file":"AccordionContent.js"}