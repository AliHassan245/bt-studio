{"version":3,"sources":["components/Elements/Tab/Tab.js"],"names":["filterTabChildren","child","index","props","TabContent","result","Object","create","React","cloneElement","active","title","icon","disabled","Tab","memo","children","onChange","color","orientation","className","rest","tabContents","Children","toArray","map","classList","propTypes","Color","PropTypes","func","oneOfType","number","string","isRequired","node","defaultProps","undefined","Content"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;AAOA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAQC,KAAR,EAAeC,KAAf,EAAyB;AACjD,sCAAuBF,KAAvB,EAA8B,CAACG,mBAAD,CAA9B,EAA4C,KAA5C;AAEA,MAAMC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAf;AAEAF,EAAAA,MAAM,CAACJ,KAAP,GAAeO,eAAMC,YAAN,CAAmBR,KAAnB,EAA0B;AAAES,IAAAA,MAAM,EAAEP,KAAK,CAACO,MAAN,KAAiBR;AAA3B,GAA1B,CAAf;AACAG,EAAAA,MAAM,CAACM,KAAP,GAAeV,KAAK,CAACE,KAAN,CAAYQ,KAA3B;AACAN,EAAAA,MAAM,CAACO,IAAP,GAAcX,KAAK,CAACE,KAAN,CAAYS,IAA1B;AACAP,EAAAA,MAAM,CAACQ,QAAP,GAAkBZ,KAAK,CAACE,KAAN,CAAYU,QAA9B;AAEA,SAAOR,MAAP;AACD,CAXD;;AAkBA,IAAMS,GAAG,GAAGN,eAAMO,IAAN,CAAW,UAACZ,KAAD,EAAW;AAAA,MACxBa,QADwB,GAC+Cb,KAD/C,CACxBa,QADwB;AAAA,MACdN,MADc,GAC+CP,KAD/C,CACdO,MADc;AAAA,MACNO,QADM,GAC+Cd,KAD/C,CACNc,QADM;AAAA,MACIC,KADJ,GAC+Cf,KAD/C,CACIe,KADJ;AAAA,MACWC,WADX,GAC+ChB,KAD/C,CACWgB,WADX;AAAA,MACwBC,SADxB,GAC+CjB,KAD/C,CACwBiB,SADxB;AAAA,MACsCC,IADtC,4BAC+ClB,KAD/C;;AAEhC,MAAMmB,WAAW,GAAGC,gBAASC,OAAT,CAAiBR,QAAjB,EAA2BS,GAA3B,CAA+B,UAACxB,KAAD,EAAQC,KAAR;AAAA,WAAkBF,iBAAiB,CAACC,KAAD,EAAQC,KAAR,EAAeC,KAAf,CAAnC;AAAA,GAA/B,CAApB;;AACA,MAAMuB,SAAS,GAAG,uDAAkCR,KAAlC,GAA2C;AAC3D,uBAAmBC,WAAW,KAAK;AADwB,GAA3C,EAEfC,SAFe,CAAlB;AAIA,SACE;AAAK,IAAA,SAAS,EAAEM;AAAhB,KAA+BL,IAA/B,GACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,yCACGC,WAAW,CAACG,GAAZ,CAAgB,gBAA4BvB,KAA5B;AAAA,QAAGS,KAAH,QAAGA,KAAH;AAAA,QAAUC,IAAV,QAAUA,IAAV;AAAA,QAAgBC,QAAhB,QAAgBA,QAAhB;AAAA,WACf,6BAAC,kBAAD;AACE,MAAA,GAAG,EAAEF,KADP;AAEE,MAAA,KAAK,EAAEA,KAFT;AAGE,MAAA,IAAI,EAAEC,IAHR;AAIE,MAAA,MAAM,EAAEF,MAJV;AAKE,MAAA,KAAK,EAAER,KALT;AAME,MAAA,QAAQ,EAAEe,QANZ;AAOE,MAAA,QAAQ,EAAEJ;AAPZ,MADe;AAAA,GAAhB,CADH,CADF,CADF,EAgBE;AAAS,IAAA,SAAS,EAAC;AAAnB,KACGS,WAAW,CAACG,GAAZ,CAAgB;AAAA,QAAGxB,KAAH,SAAGA,KAAH;AAAA,WAAeA,KAAf;AAAA,GAAhB,CADH,CAhBF,CADF;AAsBD,CA7BW,CAAZ;;AA+BAa,GAAG,CAACa,SAAJ,GAAgB;AAKdT,EAAAA,KAAK,EAAEU,aALO;AASdX,EAAAA,QAAQ,EAAEY,mBAAUC,IATN;AAadpB,EAAAA,MAAM,EAAEmB,mBAAUE,SAAV,CAAoB,CAC1BF,mBAAUG,MADgB,EAE1BH,mBAAUI,MAFgB,CAApB,EAGLC,UAhBW;AAqBdf,EAAAA,WAAW,EAAEU,mBAAUI,MArBT;AAyBdjB,EAAAA,QAAQ,EAAEa,mBAAUM;AAzBN,CAAhB;AA4BArB,GAAG,CAACsB,YAAJ,GAAmB;AACjBnB,EAAAA,QAAQ,EAAEoB,SADO;AAEjBnB,EAAAA,KAAK,EAAE,SAFU;AAGjBC,EAAAA,WAAW,EAAE,YAHI;AAIjBH,EAAAA,QAAQ,EAAEqB;AAJO,CAAnB;AAQAvB,GAAG,CAACwB,OAAJ,GAAclC,mBAAd;eAEeU,G","sourcesContent":["import React, { Children } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport TabContent from './TabContent';\nimport TabButton from './TabButton';\nimport { checkOnAllowedChildren, Color } from '../../../shared';\n\nimport './tab.scss';\n\n/**\n * Returns an object containing the cloned element plus some props useful to create tab buttons.\n */\nconst filterTabChildren = (child, index, props) => {\n  checkOnAllowedChildren(child, [TabContent], 'Tab');\n\n  const result = Object.create(null);\n\n  result.child = React.cloneElement(child, { active: props.active === index });\n  result.title = child.props.title;\n  result.icon = child.props.icon;\n  result.disabled = child.props.disabled;\n\n  return result;\n};\n\n\n/**\n * The Tab component consists of clickable labels that shows the corresponding content.\n */\n// the React.memo has been used here rather than on the export line like other cases, to avoid wrapping the shortcut.\nconst Tab = React.memo((props) => {\n  const { children, active, onChange, color, orientation, className, ...rest } = props;\n  const tabContents = Children.toArray(children).map((child, index) => filterTabChildren(child, index, props));\n  const classList = classNames(`bi bi-tab tab-color-${color}`, {\n    'tab-orientation': orientation === 'vertical',\n  }, className);\n\n  return (\n    <div className={classList} {...rest}>\n      <nav className=\"bi-tab-nav\">\n        <ul>\n          {tabContents.map(({ title, icon, disabled }, index) => (\n            <TabButton\n              key={title}\n              title={title}\n              icon={icon}\n              active={active}\n              index={index}\n              onChange={onChange}\n              disabled={disabled}\n            />\n          ))}\n        </ul>\n      </nav>\n      <section className=\"bi-tab-contents\">\n        {tabContents.map(({ child }) => child)}\n      </section>\n    </div>\n  );\n});\n\nTab.propTypes = {\n  /**\n   * Defines the color of the link into the label tab, can be one of the following:\n   * `default`, `primary`, `secondary`, `info`, `warning`, `success`, `danger`.\n   */\n  color: Color,\n  /**\n   * The callback to be performed on content change\n   */\n  onChange: PropTypes.func,\n  /**\n   * Defines the current active tab index\n   */\n  active: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]).isRequired,\n  /**\n   /**\n   * This props defines the orientation of the tabs.\n   */\n  orientation: PropTypes.string,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n};\n\nTab.defaultProps = {\n  onChange: undefined,\n  color: 'default',\n  orientation: 'horizontal',\n  children: undefined,\n};\n\n// shortcut\nTab.Content = TabContent;\n\nexport default Tab;\n"],"file":"Tab.js"}