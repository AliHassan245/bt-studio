{"version":3,"sources":["components/Elements/FloatingContent/utils/checkAvailableSpaceByPlacement.js"],"names":["checkAvailableSpaceByPlacement","el","trigger","placement","h","window","innerHeight","document","documentElement","clientHeight","w","innerWidth","clientWidth","placementCoords","split","isThereEnoughHeight","bottom","height","checkSpace","right","x","width","left","center","top"],"mappings":";;;;;;;;;AAGA,IAAMA,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACC,EAAD,EAAKC,OAAL,EAAcC,SAAd,EAA4B;AACjE,MAAMC,CAAC,GAAGC,MAAM,CAACC,WAAP,IAAsBC,QAAQ,CAACC,eAAT,CAAyBC,YAAzD;AACA,MAAMC,CAAC,GAAGL,MAAM,CAACM,UAAP,IAAqBJ,QAAQ,CAACC,eAAT,CAAyBI,WAAxD;AAEA,MAAMC,eAAe,GAAGV,SAAS,CAACW,KAAV,CAAgB,GAAhB,CAAxB;;AACA,MAAID,eAAe,CAAC,CAAD,CAAf,KAAuB,QAA3B,EAAqC;AACnC,QAAME,mBAAmB,GAAGX,CAAC,GAAGF,OAAO,CAACc,MAAZ,IAAsBf,EAAE,CAACgB,MAArD;AACA,QAAMC,UAAU,GAAG;AACjBC,MAAAA,KAAK,EAAEjB,OAAO,CAACkB,CAAR,IAAanB,EAAE,CAACoB,KAAhB,IAAyBN,mBADf;AAEjBO,MAAAA,IAAI,EAAEZ,CAAC,GAAGR,OAAO,CAACkB,CAAZ,IAAiBnB,EAAE,CAACoB,KAApB,IAA6BN,mBAFlB;AAGjBQ,MAAAA,MAAM,EAAER;AAHS,KAAnB;AAKA,WAAOG,UAAU,CAACL,eAAe,CAAC,CAAD,CAAhB,CAAjB;AACD;;AAED,MAAIA,eAAe,CAAC,CAAD,CAAf,KAAuB,KAA3B,EAAkC;AAChC,QAAME,oBAAmB,GAAGd,EAAE,CAACuB,GAAH,GAAS,CAAT,IAAcvB,EAAE,CAACe,MAAH,GAAYZ,CAAtD;;AACA,QAAMc,WAAU,GAAG;AACjBC,MAAAA,KAAK,EAAEjB,OAAO,CAACkB,CAAR,IAAanB,EAAE,CAACoB,KAAhB,IAAyBN,oBADf;AAEjBO,MAAAA,IAAI,EAAEZ,CAAC,GAAGR,OAAO,CAACkB,CAAZ,IAAiBnB,EAAE,CAACoB,KAApB,IAA6BN,oBAFlB;AAGjBQ,MAAAA,MAAM,EAAER;AAHS,KAAnB;AAMA,WAAOG,WAAU,CAACL,eAAe,CAAC,CAAD,CAAhB,CAAjB;AACD;;AAED,MAAIA,eAAe,CAAC,CAAD,CAAf,KAAuB,OAAvB,IAAkCH,CAAC,IAAIR,OAAO,CAACmB,KAAR,GAAgBnB,OAAO,CAACkB,CAA5B,CAAD,IAAmCnB,EAAE,CAACoB,KAA5E,EAAmF;AACjF,WAAO,IAAP;AACD;;AAED,MAAIR,eAAe,CAAC,CAAD,CAAf,KAAuB,MAAvB,IAAiCX,OAAO,CAACkB,CAAR,IAAanB,EAAE,CAACoB,KAArD,EAA4D;AAC1D,WAAO,IAAP;AACD;;AAED,SAAO,KAAP;AACD,CAnCD;;eAqCerB,8B","sourcesContent":["/**\n * Check if there space for an element to be shown based on its trigger and placement\n */\nconst checkAvailableSpaceByPlacement = (el, trigger, placement) => {\n  const h = window.innerHeight || document.documentElement.clientHeight;\n  const w = window.innerWidth || document.documentElement.clientWidth;\n\n  const placementCoords = placement.split('-');\n  if (placementCoords[0] === 'bottom') {\n    const isThereEnoughHeight = h - trigger.bottom >= el.height;\n    const checkSpace = {\n      right: trigger.x >= el.width && isThereEnoughHeight,\n      left: w - trigger.x >= el.width && isThereEnoughHeight,\n      center: isThereEnoughHeight,\n    };\n    return checkSpace[placementCoords[1]];\n  }\n\n  if (placementCoords[0] === 'top') {\n    const isThereEnoughHeight = el.top > 0 && el.bottom < h;\n    const checkSpace = {\n      right: trigger.x >= el.width && isThereEnoughHeight,\n      left: w - trigger.x >= el.width && isThereEnoughHeight,\n      center: isThereEnoughHeight,\n    };\n\n    return checkSpace[placementCoords[1]];\n  }\n\n  if (placementCoords[0] === 'right' && w - (trigger.width + trigger.x) >= el.width) {\n    return true;\n  }\n\n  if (placementCoords[0] === 'left' && trigger.x >= el.width) {\n    return true;\n  }\n\n  return false;\n};\n\nexport default checkAvailableSpaceByPlacement;\n"],"file":"checkAvailableSpaceByPlacement.js"}