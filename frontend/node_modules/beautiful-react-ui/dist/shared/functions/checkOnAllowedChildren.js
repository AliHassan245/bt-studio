"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("core-js/modules/es7.array.includes");

require("core-js/modules/es6.string.includes");

var _warn = _interopRequireDefault(require("./warn"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getComponentType = function getComponentType(ReactEl) {
  if (ReactEl.type) return getComponentType(ReactEl.type);
  return ReactEl;
};

var checkOnAllowedChildren = function checkOnAllowedChildren(ChildElement, allowedTypes, componentName) {
  if (process.env.NODE_ENV === 'development' && allowedTypes.length > 0 && !allowedTypes.map(getComponentType).includes(getComponentType(ChildElement))) {
    (0, _warn.default)("".concat(componentName, " should be receiving children of ").concat(componentName, ".* domain only, if you're abstracting your own component(s) on it then it's perfectly fine, just ignore this warning.\n") + "Otherwise, be aware that using other kind of components as ".concat(componentName, " children may quite lead to bugs or layout glitches.\n'This warning will disappear in production mode."));
  }
};

var _default = checkOnAllowedChildren;
exports.default = _default;
//# sourceMappingURL=checkOnAllowedChildren.js.map
