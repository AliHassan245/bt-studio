{"version":3,"sources":["shared/functions/checkOnAllowedChildren.js"],"names":["getComponentType","ReactEl","type","checkOnAllowedChildren","ChildElement","allowedTypes","componentName","process","env","NODE_ENV","length","map","includes"],"mappings":";;;;;;;;;;;AAAA;;;;AAGA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,OAAD,EAAa;AACpC,MAAIA,OAAO,CAACC,IAAZ,EAAkB,OAAOF,gBAAgB,CAACC,OAAO,CAACC,IAAT,CAAvB;AAElB,SAAOD,OAAP;AACD,CAJD;;AAOA,IAAME,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,YAAD,EAAeC,YAAf,EAA6BC,aAA7B,EAA+C;AAC5E,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CJ,YAAY,CAACK,MAAb,GAAsB,CAAhE,IAAqE,CAACL,YAAY,CAACM,GAAb,CAAiBX,gBAAjB,EAAmCY,QAAnC,CAA4CZ,gBAAgB,CAACI,YAAD,CAA5D,CAA1E,EAAuJ;AACrJ,uBACE,UAAGE,aAAH,8CAAoDA,aAApD,oMACgEA,aADhE,2GADF;AAID;AACF,CAPD;;eAUeH,sB","sourcesContent":["import warn from './warn';\n\n// check React.memo wrapped el\nconst getComponentType = (ReactEl) => {\n  if (ReactEl.type) return getComponentType(ReactEl.type);\n\n  return ReactEl;\n};\n\n/* eslint-disable max-len */\nconst checkOnAllowedChildren = (ChildElement, allowedTypes, componentName) => {\n  if (process.env.NODE_ENV === 'development' && allowedTypes.length > 0 && !allowedTypes.map(getComponentType).includes(getComponentType(ChildElement))) {\n    warn(\n      `${componentName} should be receiving children of ${componentName}.* domain only, if you're abstracting your own component(s) on it then it's perfectly fine, just ignore this warning.\\n`\n      + `Otherwise, be aware that using other kind of components as ${componentName} children may quite lead to bugs or layout glitches.\\n'This warning will disappear in production mode.`,\n    );\n  }\n};\n/* eslint-enable max-len */\n\nexport default checkOnAllowedChildren;\n"],"file":"checkOnAllowedChildren.js"}