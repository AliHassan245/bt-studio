{"version":3,"sources":["components/Forms/ToggleSwitch/ToggleSwitch.js"],"names":["ToggleSwitch","props","value","onChange","color","disabled","helpText","className","SwitchRender","RailRender","rest","classList","toggled","onClick","undefined","onKeyUp","propTypes","PropTypes","bool","func","Color","string","elementType","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;AASA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA,MACtBC,KADsB,GACuED,KADvE,CACtBC,KADsB;AAAA,MACfC,QADe,GACuEF,KADvE,CACfE,QADe;AAAA,MACLC,KADK,GACuEH,KADvE,CACLG,KADK;AAAA,MACEC,QADF,GACuEJ,KADvE,CACEI,QADF;AAAA,MACYC,QADZ,GACuEL,KADvE,CACYK,QADZ;AAAA,MACsBC,SADtB,GACuEN,KADvE,CACsBM,SADtB;AAAA,MACiCC,YADjC,GACuEP,KADvE,CACiCO,YADjC;AAAA,MAC+CC,UAD/C,GACuER,KADvE,CAC+CQ,UAD/C;AAAA,MAC8DC,IAD9D,4BACuET,KADvE;;AAE9B,MAAMU,SAAS,GAAG,oBAAQ;AAAA,WAAM,yBAAW,cAAX,sBAAwCP,KAAxC,GAAiD;AAC/EC,MAAAA,QAAQ,EAARA,QAD+E;AAE/EO,MAAAA,OAAO,EAAEV;AAFsE,KAAjD,EAG7BK,SAH6B,CAAN;AAAA,GAAR,EAGH,CAACL,KAAD,EAAQE,KAAR,EAAeG,SAAf,EAA0BF,QAA1B,CAHG,CAAlB;AAMA,MAAMQ,OAAO,GAAG,CAACR,QAAD,GAAY,0BAAaF,QAAb,EAAuB,CAACD,KAAxB,CAAZ,GAA6CY,SAA7D;AACA,MAAMC,OAAO,GAAG,CAACV,QAAD,GAAY,kCAAqBF,QAArB,EAA+B,CAACD,KAAhC,CAAZ,GAAqDY,SAArE;AAEA,SACE;AAAK,IAAA,SAAS,EAAEH;AAAhB,KAA+BD,IAA/B,GACE,6BAAC,UAAD;AAAY,IAAA,SAAS,EAAC,gBAAtB;AAAuC,IAAA,IAAI,EAAC,QAA5C;AAAqD,IAAA,QAAQ,EAAE,CAA/D;AAAkE,IAAA,OAAO,EAAEG,OAA3E;AAAoF,IAAA,OAAO,EAAEE;AAA7F,KACE,6BAAC,YAAD;AAAc,IAAA,SAAS,EAAC;AAAxB,IADF,CADF,EAIGT,QAAQ,IAAI,6BAAC,iBAAD;AAAU,IAAA,IAAI,EAAEA;AAAhB,IAJf,CADF;AAQD,CAnBD;;AAqBAN,YAAY,CAACgB,SAAb,GAAyB;AAIvBd,EAAAA,KAAK,EAAEe,mBAAUC,IAJM;AAQvBf,EAAAA,QAAQ,EAAEc,mBAAUE,IARG;AAYvBf,EAAAA,KAAK,EAAEgB,aAZgB;AAgBvBd,EAAAA,QAAQ,EAAEW,mBAAUI,MAhBG;AAoBvBhB,EAAAA,QAAQ,EAAEY,mBAAUC,IApBG;AAwBvBV,EAAAA,YAAY,EAAES,mBAAUK,WAxBD;AA4BvBb,EAAAA,UAAU,EAAEQ,mBAAUK;AA5BC,CAAzB;AA+BAtB,YAAY,CAACuB,YAAb,GAA4B;AAC1BrB,EAAAA,KAAK,EAAE,KADmB;AAE1BC,EAAAA,QAAQ,EAAEW,SAFgB;AAG1BV,EAAAA,KAAK,EAAE,SAHmB;AAI1BE,EAAAA,QAAQ,EAAEQ,SAJgB;AAK1BT,EAAAA,QAAQ,EAAE,KALgB;AAM1BG,EAAAA,YAAY,EAAE,KANY;AAO1BC,EAAAA,UAAU,EAAE;AAPc,CAA5B;eAUeT,Y","sourcesContent":["import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Color, makeCallback, makeKeyboardCallback } from '../../../shared';\nimport HelpText from '../_HelpText';\n\nimport './toggle.scss';\n\n/**\n * A ToggleSwitch is a boolean input field mostly used to get a boolean-like response from the user:\n * *yes/no*, *true/false*, etc...<br />\n * Similar to Checkbox a toggle switch is commonly used as checkbox replacements in modern user interfaces.\n */\nconst ToggleSwitch = (props) => {\n  const { value, onChange, color, disabled, helpText, className, SwitchRender, RailRender, ...rest } = props;\n  const classList = useMemo(() => classNames('bi bi-toggle', `bi-toggle-${color}`, {\n    disabled,\n    toggled: value,\n  }, className), [value, color, className, disabled]);\n\n  // handlers\n  const onClick = !disabled ? makeCallback(onChange, !value) : undefined;\n  const onKeyUp = !disabled ? makeKeyboardCallback(onChange, !value) : undefined;\n\n  return (\n    <div className={classList} {...rest}>\n      <RailRender className=\"bi-toggle-rail\" role=\"button\" tabIndex={0} onClick={onClick} onKeyUp={onKeyUp}>\n        <SwitchRender className=\"bi-toggle-switch\" />\n      </RailRender>\n      {helpText && <HelpText text={helpText} />}\n    </div>\n  );\n};\n\nToggleSwitch.propTypes = {\n  /**\n   * The toggle value, boolean\n   */\n  value: PropTypes.bool,\n  /**\n   * The toggle on change handler\n   */\n  onChange: PropTypes.func,\n  /**\n   * Changes the toggle background color when toggled\n   */\n  color: Color,\n  /**\n   * Displays a help text right under the component\n   */\n  helpText: PropTypes.string,\n  /**\n   * Defines whether the switch should be disabled or not\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Defines the switch element renderer\n   */\n  SwitchRender: PropTypes.elementType,\n  /**\n   * Defines the switch rail renderer\n   */\n  RailRender: PropTypes.elementType,\n};\n\nToggleSwitch.defaultProps = {\n  value: false,\n  onChange: undefined,\n  color: 'success',\n  helpText: undefined,\n  disabled: false,\n  SwitchRender: 'div',\n  RailRender: 'div',\n};\n\nexport default ToggleSwitch;\n"],"file":"ToggleSwitch.js"}