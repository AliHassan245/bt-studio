{"version":3,"sources":["components/Forms/FormPanel/FormPanel.js"],"names":["FormPanel","props","label","labelType","LabelRender","children","className","rest","classList","propTypes","PropTypes","string","oneOf","elementType","defaultProps","undefined","React","memo"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;AAQA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAAA,MACnBC,KADmB,GAC6CD,KAD7C,CACnBC,KADmB;AAAA,MACZC,SADY,GAC6CF,KAD7C,CACZE,SADY;AAAA,MACDC,WADC,GAC6CH,KAD7C,CACDG,WADC;AAAA,MACYC,QADZ,GAC6CJ,KAD7C,CACYI,QADZ;AAAA,MACsBC,SADtB,GAC6CL,KAD7C,CACsBK,SADtB;AAAA,MACoCC,IADpC,4BAC6CN,KAD7C;;AAE3B,MAAMO,SAAS,GAAG,oBAAQ;AAAA,WAAM,yBAAW,kBAAX,4CACdL,SADc,GACA,CAAC,CAACA,SADF,GAE7BG,SAF6B,CAAN;AAAA,GAAR,EAEH,CAACH,SAAD,EAAYG,SAAZ,CAFG,CAAlB;AAIA,SACE;AAAK,IAAA,SAAS,EAAEE;AAAhB,KAA+BD,IAA/B,GACGL,KAAK,IAAK,6BAAC,WAAD;AAAa,IAAA,SAAS,EAAC;AAAvB,KAAsCA,KAAtC,CADb,EAEE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGG,QADH,CAFF,CADF;AAQD,CAdD;;AAgBAL,SAAS,CAACS,SAAV,GAAsB;AAIpBP,EAAAA,KAAK,EAAEQ,mBAAUC,MAJG;AASpBR,EAAAA,SAAS,EAAEO,mBAAUE,KAAV,CAAgB,CAAC,UAAD,EAAa,OAAb,CAAhB,CATS;AAapBR,EAAAA,WAAW,EAAEM,mBAAUG;AAbH,CAAtB;AAiBAb,SAAS,CAACc,YAAV,GAAyB;AACvBZ,EAAAA,KAAK,EAAEa,SADgB;AAEvBZ,EAAAA,SAAS,EAAE,UAFY;AAGvBC,EAAAA,WAAW,EAAE;AAHU,CAAzB;;eAMeY,eAAMC,IAAN,CAAWjB,SAAX,C","sourcesContent":["import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './form-panel.scss';\n\n/**\n * A FormPanel wraps a group of input-fields or form-groups to provide a hierarchical division within forms.<br />\n * Can be used to wrap together fields of the same context.\n */\nconst FormPanel = (props) => {\n  const { label, labelType, LabelRender, children, className, ...rest } = props;\n  const classList = useMemo(() => classNames('bi bi-form-panel', {\n    [`bi-fp-label-${labelType}`]: !!labelType,\n  }, className), [labelType, className]);\n\n  return (\n    <div className={classList} {...rest}>\n      {label && (<LabelRender className=\"bi-fp-label\">{label}</LabelRender>)}\n      <div className=\"bi-fp-content\">\n        {children}\n      </div>\n    </div>\n  );\n};\n\nFormPanel.propTypes = {\n  /**\n   * Defines the panel label to be shown on top of it\n   */\n  label: PropTypes.string,\n  /**\n   * Defines the label type.\n   * `floating` type shows a floating label on top of the form panel whilst `title` shows a title-like label\n   */\n  labelType: PropTypes.oneOf(['floating', 'title']),\n  /**\n   * Defines the title render component\n   */\n  LabelRender: PropTypes.elementType,\n};\n\n\nFormPanel.defaultProps = {\n  label: undefined,\n  labelType: 'floating',\n  LabelRender: 'span',\n};\n\nexport default React.memo(FormPanel);\n"],"file":"FormPanel.js"}