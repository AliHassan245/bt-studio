{"version":3,"sources":["components/Forms/Input/Input.js"],"names":["Input","props","value","onChange","color","placeholder","disabled","size","helpText","icon","iconPosition","className","fluid","style","rest","classList","onChangeHandler","propTypes","PropTypes","oneOfType","number","string","func","bool","Color","Size","IconProp","oneOf","shape","defaultProps","undefined","React","memo"],"mappings":"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","sourcesContent":["import React, { useMemo, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport HelpText from '../_HelpText';\nimport { Color, IconProp, Size, makeIconFromProp, makeCallback } from '../../../shared';\n\nimport './input.scss';\n\n/**\n * An Input component is a field used to get a response from the user\n */\nconst Input = (props) => {\n  const {\n    value, onChange, color, placeholder, disabled, size, helpText, icon, iconPosition, className, fluid, style, ...rest\n  } = props;\n\n  const classList = useMemo(() => classNames('bi bi-input', `input-${color}`, {\n    disabled,\n    'has-icon': !!icon,\n    'icon-left': iconPosition === 'left',\n    'input-sm': size === 'small',\n    'input-lg': size === 'large',\n    fluid,\n  }, className), [color, disabled, icon, iconPosition, size, fluid, className]);\n\n  const onChangeHandler = useCallback(makeCallback(onChange), [onChange]);\n\n  return (\n    <div className={classList} style={style}>\n      <input value={value} onChange={onChangeHandler} placeholder={placeholder} disabled={disabled} {...rest} />\n      {icon && makeIconFromProp(icon, { size })}\n      {helpText && <HelpText text={helpText} color={color} />}\n    </div>\n  );\n};\n\nInput.propTypes = {\n  /**\n   * The input value\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The callback to be performed when input's value changes\n   */\n  onChange: PropTypes.func,\n  /**\n   * Defines the input placeholder\n   */\n  placeholder: PropTypes.string,\n  /**\n   * Disables the input\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Displays a help text right under the component\n   */\n  helpText: PropTypes.string,\n  /**\n   * Defines the input color\n   */\n  color: Color,\n  /**\n   * Defines the input size,\n   */\n  size: Size,\n  /**\n   * Shows the possible icon\n   */\n  icon: IconProp,\n  /**\n   * Defines the icon position\n   */\n  iconPosition: PropTypes.oneOf(['right', 'left']),\n  /**\n   * Defines if the input should take all the possible width\n   */\n  fluid: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  style: PropTypes.shape({}),\n};\n\nInput.defaultProps = {\n  value: '',\n  onChange: undefined,\n  placeholder: 'Input field...',\n  disabled: false,\n  helpText: undefined,\n  color: 'default',\n  size: 'default',\n  icon: undefined,\n  iconPosition: 'right',\n  fluid: false,\n  style: undefined,\n};\n\nexport default React.memo(Input);\n"],"file":"Input.js"}