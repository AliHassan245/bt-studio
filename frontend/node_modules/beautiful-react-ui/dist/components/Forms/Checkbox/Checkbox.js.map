{"version":3,"sources":["components/Forms/Checkbox/Checkbox.js"],"names":["Checkbox","props","value","onChange","color","helpText","className","CheckIconRender","style","rest","classList","checked","disabled","onClick","undefined","onKeyUp","propTypes","PropTypes","bool","func","Color","string","elementType","defaultProps","CheckIcon","React","memo"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;AASA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA,MAClBC,KADkB,GAC+DD,KAD/D,CAClBC,KADkB;AAAA,MACXC,QADW,GAC+DF,KAD/D,CACXE,QADW;AAAA,MACDC,KADC,GAC+DH,KAD/D,CACDG,KADC;AAAA,MACMC,QADN,GAC+DJ,KAD/D,CACMI,QADN;AAAA,MACgBC,SADhB,GAC+DL,KAD/D,CACgBK,SADhB;AAAA,MAC2BC,eAD3B,GAC+DN,KAD/D,CAC2BM,eAD3B;AAAA,MAC4CC,KAD5C,GAC+DP,KAD/D,CAC4CO,KAD5C;AAAA,MACsDC,IADtD,4BAC+DR,KAD/D;;AAE1B,MAAMS,SAAS,GAAG,oBAAQ;AAAA,WAAM,yBAAW,gBAAX,wBAA4CN,KAA5C,GAAqD;AACnFO,MAAAA,OAAO,EAAE,CAAC,CAACT,KADwE;AAEnFU,MAAAA,QAAQ,EAAEH,IAAI,CAACG;AAFoE,KAArD,EAG7BN,SAH6B,CAAN;AAAA,GAAR,EAGH,CAACF,KAAD,EAAQF,KAAR,EAAeO,IAAI,CAACG,QAApB,CAHG,CAAlB;AAKA,MAAMC,OAAO,GAAG,CAACJ,IAAI,CAACG,QAAN,GAAiB,wBAAY,0BAAaT,QAAb,EAAuB,CAACD,KAAxB,CAAZ,EAA4C,CAACC,QAAD,EAAWD,KAAX,CAA5C,CAAjB,GAAkFY,SAAlG;AACA,MAAMC,OAAO,GAAG,CAACN,IAAI,CAACG,QAAN,GAAiB,wBAAY,kCAAqBT,QAArB,EAA+B,CAACD,KAAhC,CAAZ,EAAoD,CAACC,QAAD,EAAWD,KAAX,CAApD,CAAjB,GAA0FY,SAA1G;AAEA,SAEE;AAAK,IAAA,SAAS,EAAEJ,SAAhB;AAA2B,IAAA,OAAO,EAAEG,OAApC;AAA6C,IAAA,OAAO,EAAEE,OAAtD;AAA+D,IAAA,QAAQ,EAAE,CAAzE;AAA4E,IAAA,IAAI,EAAC,UAAjF;AAA4F,oBAAcb,KAA1G;AAAiH,IAAA,KAAK,EAAEM;AAAxH,KACE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,KAAK,EAAEN;AAA9B,KAAyCO,IAAzC,EADF,EAEE,6BAAC,eAAD;AAAiB,IAAA,OAAO,EAAE,CAAC,CAACP,KAA5B;AAAmC,IAAA,KAAK,EAAEE;AAA1C,IAFF,EAGGC,QAAQ,IAAI,6BAAC,iBAAD;AAAU,IAAA,IAAI,EAAEA;AAAhB,IAHf,CAFF;AASD,CAnBD;;AAqBAL,QAAQ,CAACgB,SAAT,GAAqB;AAInBd,EAAAA,KAAK,EAAEe,mBAAUC,IAJE;AAQnBf,EAAAA,QAAQ,EAAEc,mBAAUE,IARD;AAYnBf,EAAAA,KAAK,EAAEgB,aAZY;AAgBnBR,EAAAA,QAAQ,EAAEK,mBAAUC,IAhBD;AAoBnBb,EAAAA,QAAQ,EAAEY,mBAAUI,MApBD;AAwBnBd,EAAAA,eAAe,EAAEU,mBAAUK;AAxBR,CAArB;AA4BAtB,QAAQ,CAACuB,YAAT,GAAwB;AACtBrB,EAAAA,KAAK,EAAE,KADe;AAEtBC,EAAAA,QAAQ,EAAEW,SAFY;AAGtBV,EAAAA,KAAK,EAAE,SAHe;AAItBQ,EAAAA,QAAQ,EAAE,KAJY;AAKtBP,EAAAA,QAAQ,EAAES,SALY;AAMtBP,EAAAA,eAAe,EAAEiB;AANK,CAAxB;;eASeC,eAAMC,IAAN,CAAW1B,QAAX,C","sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Color, makeCallback, makeKeyboardCallback } from '../../../shared';\nimport CheckIcon from './CheckIcon';\nimport HelpText from '../_HelpText';\n\nimport './checkbox.scss';\n\n/**\n * A Checkbox is a boolean input field mostly used to get a boolean-like response from the user:\n * *yes/no*, *true/false*, etc...<br />\n * Similar to ToggleSwitch a checkbox is commonly in classic forms.\n */\nconst Checkbox = (props) => {\n  const { value, onChange, color, helpText, className, CheckIconRender, style, ...rest } = props;\n  const classList = useMemo(() => classNames('bi bi-checkbox', `bi-checkbox-${color}`, {\n    checked: !!value,\n    disabled: rest.disabled,\n  }, className), [color, value, rest.disabled]);\n\n  const onClick = !rest.disabled ? useCallback(makeCallback(onChange, !value), [onChange, value]) : undefined;\n  const onKeyUp = !rest.disabled ? useCallback(makeKeyboardCallback(onChange, !value), [onChange, value]) : undefined;\n\n  return (\n    // eslint-disable-next-line max-len\n    <div className={classList} onClick={onClick} onKeyUp={onKeyUp} tabIndex={0} role=\"checkbox\" aria-checked={value} style={style}>\n      <input type=\"checkbox\" value={value} {...rest} />\n      <CheckIconRender checked={!!value} color={color} />\n      {helpText && <HelpText text={helpText} />}\n    </div>\n\n  );\n};\n\nCheckbox.propTypes = {\n  /**\n   * The checkbox value, boolean\n   */\n  value: PropTypes.bool,\n  /**\n   * The checkbox on change handler\n   */\n  onChange: PropTypes.func,\n  /**\n   * Defines the checkbox background color\n   */\n  color: Color,\n  /**\n   * Defines whether the checkbox should be disabled or not\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Displays a help text right under the component\n   */\n  helpText: PropTypes.string,\n  /**\n   * Defines the check icon renderer\n   */\n  CheckIconRender: PropTypes.elementType,\n};\n\n\nCheckbox.defaultProps = {\n  value: false,\n  onChange: undefined,\n  color: 'default',\n  disabled: false,\n  helpText: undefined,\n  CheckIconRender: CheckIcon,\n};\n\nexport default React.memo(Checkbox);\n"],"file":"Checkbox.js"}