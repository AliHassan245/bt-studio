"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

require("core-js/modules/es6.weak-map");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("core-js/modules/es6.object.assign");

require("core-js/modules/es6.string.iterator");

require("core-js/modules/es6.array.from");

require("core-js/modules/es6.regexp.to-string");

require("core-js/modules/es7.symbol.async-iterator");

require("core-js/modules/es6.symbol");

require("core-js/modules/web.dom.iterable");

require("core-js/modules/es6.array.iterator");

require("core-js/modules/es6.object.to-string");

require("core-js/modules/es6.object.keys");

require("core-js/modules/es7.array.includes");

require("core-js/modules/es6.string.includes");

require("core-js/modules/es6.function.name");

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _List = _interopRequireDefault(require("../../Layout/List"));

var _Button = _interopRequireDefault(require("../../Elements/Button"));

var _Paragraph = _interopRequireDefault(require("../../Typography/Paragraph"));

var _fileIcons = _interopRequireDefault(require("./fileIcons"));

var _Avatar = _interopRequireDefault(require("../../Elements/Avatar"));

var _ProgressBar = _interopRequireDefault(require("../../Elements/ProgressBar"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(n); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var toMb = function toMb(size) {
  return "".concat(size / 1000000, "MB");
};

var FileItem = function FileItem(_ref) {
  var file = _ref.file,
      removeLabel = _ref.removeLabel,
      uploadingLabel = _ref.uploadingLabel,
      uploadingFn = _ref.uploadingFn,
      onRemove = _ref.onRemove,
      rest = _objectWithoutProperties(_ref, ["file", "removeLabel", "uploadingLabel", "uploadingFn", "onRemove"]);

  var name = file.name,
      size = file.size,
      type = file.type;

  var _useState = (0, _react.useState)(),
      _useState2 = _slicedToArray(_useState, 2),
      preview = _useState2[0],
      setPreview = _useState2[1];

  var _useState3 = (0, _react.useState)(0),
      _useState4 = _slicedToArray(_useState3, 2),
      byteSent = _useState4[0],
      setByteSent = _useState4[1];

  var _useState5 = (0, _react.useState)(false),
      _useState6 = _slicedToArray(_useState5, 2),
      isUploading = _useState6[0],
      setIsUploading = _useState6[1];

  var isPreviewable = (0, _react.useMemo)(function () {
    return ['image/png', 'image/jpeg', 'image/jpg', 'image/gif'].includes(type);
  }, [type]);
  (0, _react.useEffect)(function () {
    if (isPreviewable) {
      var reader = new FileReader();

      reader.onload = function (e) {
        return setPreview(e.target.result);
      };

      reader.readAsDataURL(file);
    }
  }, [isPreviewable]);
  (0, _react.useEffect)(function () {
    if (uploadingFn && !isUploading && byteSent <= 0) {
      var next = function next(data) {
        setByteSent(data.byteSent);
        setIsUploading(data.loading);
      };

      uploadingFn(file, next);
    }
  }, [uploadingFn, isUploading, byteSent]);
  var onRemoveClick = (0, _react.useCallback)(function (e) {
    e.stopPropagation();
    onRemove(e);
  }, [onRemove, file.name, file.size]);
  return _react.default.createElement(_List.default.Item, _extends({
    className: "bi bi-file-item",
    icon: !isPreviewable ? _fileIcons.default[type] || 'file' : undefined
  }, rest), isPreviewable && preview && _react.default.createElement(_Avatar.default, {
    src: preview
  }), _react.default.createElement("div", {
    className: "bi-file-info"
  }, _react.default.createElement(_Paragraph.default, null, name), _react.default.createElement(_Paragraph.default, {
    tiny: true,
    className: "bi bi-file-size"
  }, toMb(size)), isUploading && _react.default.createElement(_ProgressBar.default, {
    completed: 100 * (byteSent / file.size)
  })), _react.default.createElement(_Button.default, {
    color: "transparent",
    onClick: onRemoveClick,
    spinner: isUploading,
    disabled: isUploading
  }, !isUploading ? removeLabel : uploadingLabel));
};

FileItem.propTypes = {
  file: _propTypes.default.instanceOf(File).isRequired,
  uploadingFn: _propTypes.default.func,
  onRemove: _propTypes.default.func.isRequired,
  removeLabel: _propTypes.default.string,
  uploadingLabel: _propTypes.default.string
};
FileItem.defaultProps = {
  removeLabel: 'Remove',
  uploadingLabel: 'Uploading',
  uploadingFn: undefined
};

var _default = _react.default.memo(FileItem);

exports.default = _default;
//# sourceMappingURL=FileItem.js.map
