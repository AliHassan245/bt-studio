{"version":3,"sources":["components/Forms/FileUploader/FileUploader.js"],"names":["FileUploader","props","uploads","onChange","icon","title","subtitle","multiple","accept","uploadingFn","removeLabel","uploadingLabel","ElementRender","TitleRender","SubtitleRender","ListRender","FileItemRender","className","rest","fuHandlers","onFilesChange","onFileRemove","clickHandler","dropZoneRef","inputRef","isOver","classList","length","map","upload","index","file","name","propTypes","PropTypes","arrayOf","shape","instanceOf","File","isRequired","byteSent","number","uploading","bool","func","string","IconProp","elementType","defaultProps","undefined","Title","Paragraph","FileItem","List","React","memo"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Title from '../../Typography/Title';\nimport Paragraph from '../../Typography/Paragraph';\nimport List from '../../Layout/List';\nimport FileItem from './FileItem';\nimport useFileUploadHandlers from './utils/useFileUploaderHandlers';\nimport { IconProp, makeIconFromProp } from '../../../shared';\n\nimport './file-uploader.scss';\n\n/**\n * A FileUploader is a controlled component providing drag n' drop functionality for file uploads.<br />\n * It also provides file preview when possible or file icons as a fallback.\n */\nconst FileUploader = (props) => {\n  const {\n    uploads, onChange, icon, title, subtitle, multiple, accept, uploadingFn, removeLabel, uploadingLabel,\n    ElementRender, TitleRender, SubtitleRender, ListRender, FileItemRender, className, ...rest\n  } = props;\n  const fuHandlers = useFileUploadHandlers(uploads, multiple, onChange);\n  const { onFilesChange, onFileRemove, clickHandler, dropZoneRef, inputRef, isOver } = fuHandlers;\n\n  const classList = useMemo(() => classNames('bi bi-file-uploader', {\n    'file-dropping': isOver,\n  }, className), [className, isOver]);\n\n\n  return (\n    <ElementRender className={classList} onClick={clickHandler} tabIndex={0} role=\"button\" {...rest}>\n      <div className=\"bi-file-uploader-content\" ref={dropZoneRef}>\n        <div className=\"bi-drop-icon\">\n          {!!icon && makeIconFromProp(icon)}\n        </div>\n        <TitleRender tagName=\"h4\">{title}</TitleRender>\n        {subtitle && (<SubtitleRender>{subtitle}</SubtitleRender>)}\n      </div>\n      {uploads && uploads.length > 0 && (\n        <ListRender bordered className=\"bi bi-uploaded-files\">\n          {uploads.map((upload, index) => (\n            <FileItemRender\n              removeLabel={removeLabel}\n              key={upload.file.name}\n              file={upload.file}\n              uploadingFn={uploadingFn}\n              uploadingLabel={uploadingLabel}\n              onRemove={onFileRemove(index)}\n            />\n          ))}\n        </ListRender>\n      )}\n      <input type=\"file\" accept={accept} multiple={multiple} ref={inputRef} onChange={onFilesChange} />\n    </ElementRender>\n  );\n};\n\nFileUploader.propTypes = {\n  /**\n   * The array of the current uploading files.\n   */\n  uploads: PropTypes.arrayOf(PropTypes.shape({\n    file: PropTypes.instanceOf(File).isRequired,\n    byteSent: PropTypes.number,\n    uploading: PropTypes.bool,\n  })),\n  /**\n   * The callback to be performed when input's value changes\n   */\n  onChange: PropTypes.func,\n  /**\n   * The function to be performed whilst performing an upload.\n   * Receives the file to upload and the 'next' callback.\n   * The next callback should be performed to update the file state by passing the uploading state\n   */\n  uploadingFn: PropTypes.func,\n  /**\n   * Defines the FileUploader content title\n   */\n  title: PropTypes.string,\n  /**\n   * Defines the FileUploader content subtitle\n   */\n  subtitle: PropTypes.string,\n  /**\n   * The icon to be displayed in the middle of the FileUploader content.\n   * A valid Icon component name prop or the instance of an Icon component are both valid values.\n   */\n  icon: IconProp,\n  /**\n   * Defines whether the component should allows the user to select more than one file\n   */\n  multiple: PropTypes.bool,\n  /**\n   * Defines one or more unique file type specifiers describing file types to allow\n   */\n  accept: PropTypes.string,\n  /**\n   * The \"remove\" label locale\n   */\n  removeLabel: PropTypes.string,\n  /**\n   * The \"uploading\" label locale\n   */\n  uploadingLabel: PropTypes.string,\n  /**\n   * A renderer to replace the standard FileUploader element\n   */\n  ElementRender: PropTypes.elementType,\n  /**\n   * A renderer to replace the standard Title component\n   */\n  TitleRender: PropTypes.elementType,\n  /**\n   * A renderer to replace the standard Subtitle component\n   */\n  SubtitleRender: PropTypes.elementType,\n  /**\n   * A renderer to replace the standard FileItem component\n   */\n  FileItemRender: PropTypes.elementType,\n  /**\n   * A renderer to replace the standard List component\n   */\n  ListRender: PropTypes.elementType,\n};\n\nFileUploader.defaultProps = {\n  uploads: undefined,\n  onChange: undefined,\n  uploadingFn: undefined,\n  title: 'Drop file(s) here or click to upload',\n  removeLabel: 'Remove',\n  uploadingLabel: 'Uploading',\n  subtitle: undefined,\n  multiple: false,\n  accept: undefined,\n  icon: 'cloud-upload-alt',\n  TitleRender: Title,\n  SubtitleRender: Paragraph,\n  ElementRender: 'div',\n  FileItemRender: FileItem,\n  ListRender: List,\n};\n\nexport default React.memo(FileUploader);\n"],"file":"FileUploader.js"}