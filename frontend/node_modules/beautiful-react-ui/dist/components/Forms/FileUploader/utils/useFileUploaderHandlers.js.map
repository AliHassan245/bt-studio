{"version":3,"sources":["components/Forms/FileUploader/utils/useFileUploaderHandlers.js"],"names":["useFileUploadHandlers","uploads","multiple","onChange","dropZoneRef","inputRef","onDrop","isOver","onFilesChange","event","target","files","length","getNextUploads","nextUploads","onFileRemove","index","removeUpload","dataTransfer","preventDefault","clickHandler","e","current","stopPropagation","click"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAKA,IAAMA,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,OAAD,EAAUC,QAAV,EAAoBC,QAApB,EAAiC;AAC7D,MAAMC,WAAW,GAAG,oBAApB;AACA,MAAMC,QAAQ,GAAG,oBAAjB;;AAF6D,qBAGlC,sCAAYD,WAAZ,CAHkC;AAAA,MAGrDE,MAHqD,gBAGrDA,MAHqD;AAAA,MAG7CC,MAH6C,gBAG7CA,MAH6C;;AAQ7D,MAAMC,aAAa,GAAG,wBAAY,UAACC,KAAD,EAAW;AAC3C,QAAIN,QAAQ,IAAIM,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,GAA4B,CAA5C,EAA+C;AAC7C,UAAMC,cAAc,GAAG,+BAAiBX,QAAjB,EAA2BD,OAA3B,CAAvB;AACA,UAAMa,WAAW,GAAGD,cAAc,CAACJ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlC;AAEAR,MAAAA,QAAQ,CAACM,KAAD,EAAQK,WAAR,CAAR;AACD;AACF,GAPqB,EAOnB,CAACb,OAAD,EAAUE,QAAV,CAPmB,CAAtB;AAYA,MAAMY,YAAY,GAAG,wBAAY,UAACC,KAAD;AAAA,WAAW,UAACP,KAAD,EAAW;AACrD,UAAIN,QAAJ,EAAc;AACZ,YAAMc,YAAY,GAAG,6BAAeD,KAAf,CAArB;AACA,YAAMF,WAAW,GAAGG,YAAY,CAAChB,OAAD,CAAhC;AAEAE,QAAAA,QAAQ,CAACM,KAAD,EAAQK,WAAR,CAAR;AACD;AACF,KAPgC;AAAA,GAAZ,EAOlB,CAACb,OAAD,EAAUE,QAAV,CAPkB,CAArB;AAYAG,EAAAA,MAAM,CAAC,UAACG,KAAD,EAAW;AAChB,QAAMI,cAAc,GAAG,+BAAiBX,QAAjB,EAA2BD,OAA3B,CAAvB;AACA,QAAMa,WAAW,GAAGD,cAAc,CAACJ,KAAK,CAACS,YAAN,CAAmBP,KAApB,CAAlC;AAEAR,IAAAA,QAAQ,CAACM,KAAD,EAAQK,WAAR,CAAR;AACAL,IAAAA,KAAK,CAACU,cAAN;AACD,GANK,CAAN;AAWA,MAAMC,YAAY,GAAG,wBAAY,UAACC,CAAD,EAAO;AACtC,QAAIhB,QAAQ,CAACiB,OAAb,EAAsB;AACpBD,MAAAA,CAAC,CAACE,eAAF;AACAlB,MAAAA,QAAQ,CAACiB,OAAT,CAAiBE,KAAjB;AACD;AACF,GALoB,EAKlB,CAACnB,QAAQ,CAACiB,OAAV,CALkB,CAArB;AAQA,SAAO;AAAEd,IAAAA,aAAa,EAAbA,aAAF;AAAiBO,IAAAA,YAAY,EAAZA,YAAjB;AAA+BK,IAAAA,YAAY,EAAZA,YAA/B;AAA6Cb,IAAAA,MAAM,EAANA,MAA7C;AAAqDH,IAAAA,WAAW,EAAXA,WAArD;AAAkEC,IAAAA,QAAQ,EAARA;AAAlE,GAAP;AACD,CApDD;;eAsDeL,qB","sourcesContent":["import { useCallback, useRef } from 'react';\nimport { useDropZone } from 'beautiful-react-hooks';\nimport getNextUploadsBy from './getNextUploadsBy';\nimport removeUploadAt from './removeUploadAt';\n\n/**\n * This hook wraps up the business logic of the FileUploader component in order to keep a clean code\n */\nconst useFileUploadHandlers = (uploads, multiple, onChange) => {\n  const dropZoneRef = useRef(); // the input element ref, used to trigger the click event\n  const inputRef = useRef(); // the input element ref, used to trigger the click event\n  const { onDrop, isOver } = useDropZone(dropZoneRef);\n\n  /**\n   * When the input changes, trigger the `onChange` function passing the event and the new uploads\n   */\n  const onFilesChange = useCallback((event) => {\n    if (onChange && event.target.files.length > 0) {\n      const getNextUploads = getNextUploadsBy(multiple)(uploads);\n      const nextUploads = getNextUploads(event.target.files);\n\n      onChange(event, nextUploads);\n    }\n  }, [uploads, onChange]);\n\n  /**\n   * When the remove button is pressed, remove a file from the index\n   */\n  const onFileRemove = useCallback((index) => (event) => {\n    if (onChange) {\n      const removeUpload = removeUploadAt(index);\n      const nextUploads = removeUpload(uploads);\n\n      onChange(event, nextUploads);\n    }\n  }, [uploads, onChange]);\n\n  /**\n   * On drop handler\n   */\n  onDrop((event) => {\n    const getNextUploads = getNextUploadsBy(multiple)(uploads);\n    const nextUploads = getNextUploads(event.dataTransfer.files);\n\n    onChange(event, nextUploads);\n    event.preventDefault();\n  });\n\n  /**\n   * Click handler\n   */\n  const clickHandler = useCallback((e) => {\n    if (inputRef.current) {\n      e.stopPropagation();\n      inputRef.current.click();\n    }\n  }, [inputRef.current]);\n\n\n  return { onFilesChange, onFileRemove, clickHandler, isOver, dropZoneRef, inputRef };\n};\n\nexport default useFileUploadHandlers;\n"],"file":"useFileUploaderHandlers.js"}