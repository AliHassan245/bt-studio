{"version":3,"sources":["components/Elements/Tooltip/Tooltip.js"],"names":["Tooltip","props","action","title","className","rest","classList","propTypes","trigger","PropTypes","node","isRequired","onToggle","func","isOpen","bool","placement","Placement","defaultProps","React","memo"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAOA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AAAA,MAGjBC,MAHiB,GAGqBD,KAHrB,CAGjBC,MAHiB;AAAA,MAGTC,KAHS,GAGqBF,KAHrB,CAGTE,KAHS;AAAA,MAGFC,SAHE,GAGqBH,KAHrB,CAGFG,SAHE;AAAA,MAGYC,IAHZ,4BAGqBJ,KAHrB;;AAIzB,MAAMK,SAAS,GAAG,yBAAW,YAAX,EAAyBF,SAAzB,CAAlB;AAEA,SAAQ,6BAAC,gBAAD;AAAS,IAAA,MAAM,EAAC,OAAhB;AAAwB,IAAA,SAAS,EAAEE;AAAnC,KAAkDD,IAAlD,EAAR;AACD,CAPD;;AASAL,OAAO,CAACO,SAAR,GAAoB;AAIlBC,EAAAA,OAAO,EAAEC,mBAAUC,IAAV,CAAeC,UAJN;AASlBC,EAAAA,QAAQ,EAAEH,mBAAUI,IAAV,CAAeF,UATP;AAalBG,EAAAA,MAAM,EAAEL,mBAAUM,IAbA;AAiBlBC,EAAAA,SAAS,EAAEC;AAjBO,CAApB;AAoBAjB,OAAO,CAACkB,YAAR,GAAuB;AACrBJ,EAAAA,MAAM,EAAE,KADa;AAErBE,EAAAA,SAAS,EAAE;AAFU,CAAvB;;eAKeG,eAAMC,IAAN,CAAWpB,OAAX,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Popover from '../Popover';\nimport { Placement } from '../../../shared';\n\nimport './tooltip.scss';\n\n/**\n * A Tooltip component is a shortcut to a Popover component to be shown on \"hover\", with a black background\n */\nconst Tooltip = (props) => {\n  //  I'm disabling eslint on the next line is because I want to remove `action` and `title` from the props\n  // eslint-disable-next-line react/prop-types\n  const { action, title, className, ...rest } = props;\n  const classList = classNames('bi-tooltip', className);\n\n  return (<Popover action=\"hover\" className={classList} {...rest} />);\n};\n\nTooltip.propTypes = {\n  /**\n   * Defines the React node to apply the popover to\n   */\n  trigger: PropTypes.node.isRequired,\n  /**\n   * Defines the callback to be performed each time the event defined by the `action` prop fires,\n   * by default a `click` event\n   */\n  onToggle: PropTypes.func.isRequired,\n  /**\n   * Defines whether the popover is shown or not\n   */\n  isOpen: PropTypes.bool,\n  /**\n   * Defines the popup placement\n   */\n  placement: Placement,\n};\n\nTooltip.defaultProps = {\n  isOpen: false,\n  placement: 'top-center',\n};\n\nexport default React.memo(Tooltip);\n"],"file":"Tooltip.js"}