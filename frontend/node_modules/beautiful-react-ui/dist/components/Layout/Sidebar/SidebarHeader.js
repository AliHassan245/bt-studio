"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("core-js/modules/es6.object.assign");

require("core-js/modules/es6.symbol");

require("core-js/modules/web.dom.iterable");

require("core-js/modules/es6.array.iterator");

require("core-js/modules/es6.object.to-string");

require("core-js/modules/es6.object.keys");

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Button = _interopRequireDefault(require("../../Elements/Button"));

var _shared = require("../../../shared");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var SidebarHeader = function SidebarHeader(_ref) {
  var orientation = _ref.orientation,
      props = _objectWithoutProperties(_ref, ["orientation"]);

  var onToggle = props.onToggle,
      title = props.title,
      titleColor = props.titleColor,
      toggleIcon = props.toggleIcon,
      showToggle = props.showToggle,
      logo = props.logo,
      rest = _objectWithoutProperties(props, ["onToggle", "title", "titleColor", "toggleIcon", "showToggle", "logo"]);

  var classList = (0, _classnames.default)('bi', 'bi-sidebar-header', "sidebar-header-".concat(titleColor));
  return _react.default.createElement("header", _extends({
    className: classList
  }, rest), _react.default.createElement("div", {
    className: "bi-sidbr-head-ctnt"
  }, title && _react.default.createElement("h1", null, title), logo && _react.default.createElement(_react.default.Fragment, null, logo)), showToggle && _react.default.createElement("div", {
    className: "bi-sidebar-toggle"
  }, _react.default.createElement(_Button.default, {
    icon: toggleIcon,
    color: "transparent",
    rounded: true,
    onClick: onToggle
  })));
};

SidebarHeader.propTypes = {
  onToggle: _propTypes.default.func,
  title: _propTypes.default.string,
  titleColor: _shared.Color,
  logo: _propTypes.default.element,
  toggleIcon: _propTypes.default.string,
  showToggle: _propTypes.default.bool
};
SidebarHeader.defaultProps = {
  onToggle: undefined,
  title: null,
  titleColor: 'default',
  logo: null,
  toggleIcon: 'bars',
  showToggle: true
};

var _default = _react.default.memo(SidebarHeader);

exports.default = _default;
//# sourceMappingURL=SidebarHeader.js.map
