{"version":3,"sources":["components/Layout/Sidebar/SidebarHeader.js"],"names":["SidebarHeader","orientation","props","onToggle","title","titleColor","toggleIcon","showToggle","logo","rest","classList","propTypes","PropTypes","func","string","Color","element","bool","defaultProps","undefined","React","memo"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAQA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,OAA+B;AAAA,MAA5BC,WAA4B,QAA5BA,WAA4B;AAAA,MAAZC,KAAY;;AAAA,MAC3CC,QAD2C,GAC4BD,KAD5B,CAC3CC,QAD2C;AAAA,MACjCC,KADiC,GAC4BF,KAD5B,CACjCE,KADiC;AAAA,MAC1BC,UAD0B,GAC4BH,KAD5B,CAC1BG,UAD0B;AAAA,MACdC,UADc,GAC4BJ,KAD5B,CACdI,UADc;AAAA,MACFC,UADE,GAC4BL,KAD5B,CACFK,UADE;AAAA,MACUC,IADV,GAC4BN,KAD5B,CACUM,IADV;AAAA,MACmBC,IADnB,4BAC4BP,KAD5B;;AAEnD,MAAMQ,SAAS,GAAG,yBAAW,IAAX,EAAiB,mBAAjB,2BAAwDL,UAAxD,EAAlB;AAEA,SACE;AAAQ,IAAA,SAAS,EAAEK;AAAnB,KAAkCD,IAAlC,GACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGL,KAAK,IAAI,yCAAKA,KAAL,CADZ,EAEGI,IAAI,IAAI,4DAAGA,IAAH,CAFX,CADF,EAKGD,UAAU,IACT;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,6BAAC,eAAD;AACE,IAAA,IAAI,EAAED,UADR;AAEE,IAAA,KAAK,EAAC,aAFR;AAGE,IAAA,OAAO,MAHT;AAIE,IAAA,OAAO,EAAEH;AAJX,IADF,CANJ,CADF;AAkBD,CAtBD;;AAwBAH,aAAa,CAACW,SAAd,GAA0B;AACxBR,EAAAA,QAAQ,EAAES,mBAAUC,IADI;AAExBT,EAAAA,KAAK,EAAEQ,mBAAUE,MAFO;AAGxBT,EAAAA,UAAU,EAAEU,aAHY;AAIxBP,EAAAA,IAAI,EAAEI,mBAAUI,OAJQ;AAKxBV,EAAAA,UAAU,EAAEM,mBAAUE,MALE;AAMxBP,EAAAA,UAAU,EAAEK,mBAAUK;AANE,CAA1B;AASAjB,aAAa,CAACkB,YAAd,GAA6B;AAC3Bf,EAAAA,QAAQ,EAAEgB,SADiB;AAE3Bf,EAAAA,KAAK,EAAE,IAFoB;AAG3BC,EAAAA,UAAU,EAAE,SAHe;AAI3BG,EAAAA,IAAI,EAAE,IAJqB;AAK3BF,EAAAA,UAAU,EAAE,MALe;AAM3BC,EAAAA,UAAU,EAAE;AANe,CAA7B;;eASea,eAAMC,IAAN,CAAWrB,aAAX,C","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Button from '../../Elements/Button';\nimport { Color } from '../../../shared';\n\nimport './sidebar-header.scss';\n\n/**\n * Sidebar Header\n */\n// eslint-disable-next-line react/prop-types\nconst SidebarHeader = ({ orientation, ...props }) => {\n  const { onToggle, title, titleColor, toggleIcon, showToggle, logo, ...rest } = props;\n  const classList = classNames('bi', 'bi-sidebar-header', `sidebar-header-${titleColor}`);\n\n  return (\n    <header className={classList} {...rest}>\n      <div className=\"bi-sidbr-head-ctnt\">\n        {title && <h1>{title}</h1>}\n        {logo && <>{logo}</>}\n      </div>\n      {showToggle && (\n        <div className=\"bi-sidebar-toggle\">\n          <Button\n            icon={toggleIcon}\n            color=\"transparent\"\n            rounded\n            onClick={onToggle}\n          />\n        </div>\n      )}\n    </header>\n  );\n};\n\nSidebarHeader.propTypes = {\n  onToggle: PropTypes.func,\n  title: PropTypes.string,\n  titleColor: Color,\n  logo: PropTypes.element,\n  toggleIcon: PropTypes.string,\n  showToggle: PropTypes.bool,\n};\n\nSidebarHeader.defaultProps = {\n  onToggle: undefined,\n  title: null,\n  titleColor: 'default',\n  logo: null,\n  toggleIcon: 'bars',\n  showToggle: true,\n};\n\nexport default React.memo(SidebarHeader);\n"],"file":"SidebarHeader.js"}