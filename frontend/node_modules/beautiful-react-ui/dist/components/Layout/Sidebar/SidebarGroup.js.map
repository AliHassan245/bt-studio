{"version":3,"sources":["components/Layout/Sidebar/SidebarGroup.js"],"names":["SidebarGroup","orientation","props","text","icon","children","ElementRender","ItemRender","ListRender","className","rest","classList","charAt","propTypes","PropTypes","string","isRequired","IconProp","elementType","defaultProps","undefined","React","memo"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;AAQA,IAAMA,YAAY,GAAG,SAAfA,YAAe,OAA+B;AAAA,MAA5BC,WAA4B,QAA5BA,WAA4B;AAAA,MAAZC,KAAY;;AAAA,MAC1CC,IAD0C,GAC0CD,KAD1C,CAC1CC,IAD0C;AAAA,MACpCC,IADoC,GAC0CF,KAD1C,CACpCE,IADoC;AAAA,MAC9BC,QAD8B,GAC0CH,KAD1C,CAC9BG,QAD8B;AAAA,MACpBC,aADoB,GAC0CJ,KAD1C,CACpBI,aADoB;AAAA,MACLC,UADK,GAC0CL,KAD1C,CACLK,UADK;AAAA,MACOC,UADP,GAC0CN,KAD1C,CACOM,UADP;AAAA,MACmBC,SADnB,GAC0CP,KAD1C,CACmBO,SADnB;AAAA,MACiCC,IADjC,4BAC0CR,KAD1C;;AAElD,MAAMS,SAAS,GAAG,oBAAQ;AAAA,WAAM,yBAAW,sCAAX,EAAmDF,SAAnD,CAAN;AAAA,GAAR,EAA6E,CAACA,SAAD,CAA7E,CAAlB;AAEA,SACE,6BAAC,aAAD;AAAe,IAAA,SAAS,EAAEE;AAA1B,KAAyCD,IAAzC,GACE,6BAAC,UAAD,QACGN,IAAI,IAAK;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAmC,8BAAiBA,IAAjB,CAAnC,CADZ,EAEE;AAAM,IAAA,SAAS,EAAC;AAAhB,KAA2CD,IAA3C,CAFF,EAGE;AAAK,IAAA,SAAS,EAAC;AAAf,KACG,CAACC,IAAD,IAAS,OAAOD,IAAP,KAAgB,QAAzB,IAAsC;AAAM,IAAA,SAAS,EAAC;AAAhB,KAA+BA,IAAI,CAACS,MAAL,CAAY,CAAZ,CAA/B,CADzC,EAEGR,IAAI,IAAI,8BAAiBA,IAAjB,CAFX,CAHF,CADF,EASE,6BAAC,UAAD;AAAY,IAAA,SAAS,EAAC;AAAtB,KACGC,QADH,CATF,CADF;AAeD,CAnBD;;AAqBAL,YAAY,CAACa,SAAb,GAAyB;AACvBV,EAAAA,IAAI,EAAEW,mBAAUC,MAAV,CAAiBC,UADA;AAEvBZ,EAAAA,IAAI,EAAEa,gBAFiB;AAGvBX,EAAAA,aAAa,EAAEQ,mBAAUI,WAHF;AAIvBV,EAAAA,UAAU,EAAEM,mBAAUI,WAJC;AAKvBX,EAAAA,UAAU,EAAEO,mBAAUI;AALC,CAAzB;AAQAlB,YAAY,CAACmB,YAAb,GAA4B;AAC1Bf,EAAAA,IAAI,EAAEgB,SADoB;AAE1Bd,EAAAA,aAAa,EAAE,IAFW;AAG1BE,EAAAA,UAAU,EAAE,IAHc;AAI1BD,EAAAA,UAAU,EAAE;AAJc,CAA5B;;eAOec,eAAMC,IAAN,CAAWtB,YAAX,C","sourcesContent":["import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { IconProp, makeIconFromProp } from '../../../shared';\n\nimport './sidebar-group.scss';\n\n/**\n * SidebarGroup\n */\n// eslint-disable-next-line react/prop-types\nconst SidebarGroup = ({ orientation, ...props }) => {\n  const { text, icon, children, ElementRender, ItemRender, ListRender, className, ...rest } = props;\n  const classList = useMemo(() => classNames('bi bi-sidebar-nav-item sidebar-group', className), [className]);\n\n  return (\n    <ElementRender className={classList} {...rest}>\n      <ItemRender>\n        {icon && (<span className=\"bi-sidebar-icon\">{makeIconFromProp(icon)}</span>)}\n        <span className=\"bi-sidebar-item-content\">{text}</span>\n        <div className=\"bi-sidebar-item-shrunk\">\n          {!icon && typeof text === 'string' && (<span className=\"shrunk-text\">{text.charAt(0)}</span>)}\n          {icon && makeIconFromProp(icon)}\n        </div>\n      </ItemRender>\n      <ListRender className=\"sidebar-group-content\">\n        {children}\n      </ListRender>\n    </ElementRender>\n  );\n};\n\nSidebarGroup.propTypes = {\n  text: PropTypes.string.isRequired,\n  icon: IconProp,\n  ElementRender: PropTypes.elementType,\n  ListRender: PropTypes.elementType,\n  ItemRender: PropTypes.elementType,\n};\n\nSidebarGroup.defaultProps = {\n  icon: undefined,\n  ElementRender: 'li',\n  ListRender: 'ul',\n  ItemRender: 'span',\n};\n\nexport default React.memo(SidebarGroup);\n"],"file":"SidebarGroup.js"}