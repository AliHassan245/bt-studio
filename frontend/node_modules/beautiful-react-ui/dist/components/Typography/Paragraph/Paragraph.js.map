{"version":3,"sources":["components/Typography/Paragraph/Paragraph.js"],"names":["Paragraph","props","children","color","fontFamily","textAlign","wordBreak","tiny","light","className","ElementRender","rest","classList","propTypes","Color","PropTypes","oneOf","bool","elementType","defaultProps","undefined","React","memo"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;AAaA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAAA,MACnBC,QADmB,GACmFD,KADnF,CACnBC,QADmB;AAAA,MACTC,KADS,GACmFF,KADnF,CACTE,KADS;AAAA,MACFC,UADE,GACmFH,KADnF,CACFG,UADE;AAAA,MACUC,SADV,GACmFJ,KADnF,CACUI,SADV;AAAA,MACqBC,SADrB,GACmFL,KADnF,CACqBK,SADrB;AAAA,MACgCC,IADhC,GACmFN,KADnF,CACgCM,IADhC;AAAA,MACsCC,KADtC,GACmFP,KADnF,CACsCO,KADtC;AAAA,MAC6CC,SAD7C,GACmFR,KADnF,CAC6CQ,SAD7C;AAAA,MACwDC,aADxD,GACmFT,KADnF,CACwDS,aADxD;AAAA,MAC0EC,IAD1E,4BACmFV,KADnF;;AAE3B,MAAMW,SAAS,GAAG,oBAAQ;AAAA;;AAAA,WAAM,yBAAW,SAAX,iBAA8BT,KAA9B,mBAAgDC,UAAhD,kEACrBC,SADqB,GACP,CAAC,CAACA,SADK,qDAEfC,SAFe,GAED,CAAC,CAACA,SAFD,gCAG9B,WAH8B,EAGjBC,IAHiB,gCAI9B,YAJ8B,EAIhBC,KAJgB,iBAK7BC,SAL6B,CAAN;AAAA,GAAR,EAKH,CAACN,KAAD,EAAQC,UAAR,EAAoBC,SAApB,EAA+BC,SAA/B,EAA0CC,IAA1C,EAAgDC,KAAhD,CALG,CAAlB;AAOA,SAAQ,6BAAC,aAAD;AAAe,IAAA,SAAS,EAAEI;AAA1B,KAAyCD,IAAzC,GAAgDT,QAAhD,CAAR;AACD,CAVD;;AAYAF,SAAS,CAACa,SAAV,GAAsB;AAKpBV,EAAAA,KAAK,EAAEW,aALa;AAUpBV,EAAAA,UAAU,EAAEW,mBAAUC,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,CAAhB,CAVQ;AAcpBX,EAAAA,SAAS,EAAEU,mBAAUC,KAAV,CAAgB,CAAC,QAAD,EAAW,MAAX,EAAmB,OAAnB,EAA4B,SAA5B,CAAhB,CAdS;AAkBpBV,EAAAA,SAAS,EAAES,mBAAUC,KAAV,CAAgB,CAAC,QAAD,EAAW,OAAX,EAAoB,KAApB,EAA2B,UAA3B,CAAhB,CAlBS;AAsBpBT,EAAAA,IAAI,EAAEQ,mBAAUE,IAtBI;AA0BpBT,EAAAA,KAAK,EAAEO,mBAAUE,IA1BG;AA8BpBP,EAAAA,aAAa,EAAEK,mBAAUG;AA9BL,CAAtB;AAkCAlB,SAAS,CAACmB,YAAV,GAAyB;AACvBhB,EAAAA,KAAK,EAAE,SADgB;AAEvBC,EAAAA,UAAU,EAAE,MAFW;AAGvBC,EAAAA,SAAS,EAAEe,SAHY;AAIvBd,EAAAA,SAAS,EAAE,QAJY;AAKvBC,EAAAA,IAAI,EAAE,KALiB;AAMvBC,EAAAA,KAAK,EAAE,KANgB;AAOvBE,EAAAA,aAAa,EAAE;AAPQ,CAAzB;;eAUeW,eAAMC,IAAN,CAAWtB,SAAX,C","sourcesContent":["import React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { Color } from '../../../shared';\n\nimport './paragraph.scss';\n\n/**\n * beautiful-react-ui does not force the developer to use its own styles nor creates extra global rules that can\n * possibly collide with the application's ones.<br/>\n * For this reason, in order to have the consistent style between the UI components and the texts, few typography\n * specialised components has been created.<br/>\n * The typography specialised components are used within the library itself.\n * <br/>\n * Here's the Paragraph component.\n */\nconst Paragraph = (props) => {\n  const { children, color, fontFamily, textAlign, wordBreak, tiny, light, className, ElementRender, ...rest } = props;\n  const classList = useMemo(() => classNames('bi bi-p', `bi-p-${color}`, `bi-ff-${fontFamily}`, {\n    [`bi-p-${textAlign}`]: !!textAlign,\n    [`bi-p-break-${wordBreak}`]: !!wordBreak,\n    'bi-p-tiny': tiny,\n    'bi-p-light': light,\n  }, className), [color, fontFamily, textAlign, wordBreak, tiny, light]);\n\n  return (<ElementRender className={classList} {...rest}>{children}</ElementRender>);\n};\n\nParagraph.propTypes = {\n  /*\n   * Defines the paragraph color, can be one of the following:\n   * `default`, `primary`, `secondary`, `info`, `warning`, `success`, `danger`.\n   */\n  color: Color,\n  /*\n   * Defines the paragraph font-family, can be one of the following:\n   * `sans`, `serif`, `mono`.\n   */\n  fontFamily: PropTypes.oneOf(['sans', 'serif', 'mono']),\n  /**\n   * Defines the paragraph text align\n   */\n  textAlign: PropTypes.oneOf(['center', 'left', 'right', 'justify']),\n  /**\n   * Defines the paragraph breaks\n   */\n  wordBreak: PropTypes.oneOf(['normal', 'words', 'all', 'truncate']),\n  /**\n   * Makes the text even smaller\n   */\n  tiny: PropTypes.bool,\n  /**\n   * Makes the text color lighter\n   */\n  light: PropTypes.bool,\n  /**\n   * A renderer to replace the paragraph element\n   */\n  ElementRender: PropTypes.elementType,\n};\n\n\nParagraph.defaultProps = {\n  color: 'default',\n  fontFamily: 'sans',\n  textAlign: undefined,\n  wordBreak: 'normal',\n  tiny: false,\n  light: false,\n  ElementRender: 'p',\n};\n\nexport default React.memo(Paragraph);\n"],"file":"Paragraph.js"}